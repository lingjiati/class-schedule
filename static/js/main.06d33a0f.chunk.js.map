{"version":3,"sources":["logo.svg","ListContainer.js","AppBar.js","Nextline.js","Todos.js","App.js","reportWebVitals.js","index.js"],"names":["ListContainer","schedule","info","periods","day","setMax","setIndex","index","useEffect","console","log","twoLine","nonInteractive","map","a","b","classStart","moment","split","classEnd","now","graphic","icon","text","secondaryText","selected","isBefore","subtract","AppBar","page","setPage","max","React","useState","open","setOpen","title","navigationIcon","onNav","actionItems","onClick","evt","disabled","modal","onClose","wrapFocus","Nextline","Todos","_index","input","createRef","inputName","dialog","mdDateTimePicker","add","time","weekNow","week","tasks","setTasks","storedTasks","JSON","parse","localStorage","getItem","setItem","stringify","filtered","filter","date","sorted","sort","dayOfYear","arrangedByWeek","currentWeek","i","length","push","arrangedByDay","currentDay","class","days","defaultOpen","handle","use","format","task","newTasks","todo","find","checked","handleCzech","name","onClosed","detail","action","label","ref","trailingIcon","e","preventDefault","document","querySelector","classList","remove","toggle","toString","addEventListener","current","focus","value","blur","isDefaultAction","newTask","handleAddTodo","raised","App","Date","getDay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.06d33a0f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {List, SimpleListItem} from '@rmwc/list'\r\nimport '@rmwc/list/styles';\r\nimport { useEffect } from 'react';\r\nimport moment from 'moment'\r\n\r\nfunction ListContainer( {schedule, info, periods, day, setMax, setIndex, index} ){\r\n    useEffect(() => setIndex(day - 1), [])\r\n    setMax(4);\r\n    \r\n    console.log(index)\r\n    return (\r\n        <List twoLine nonInteractive>\r\n            {\r\n                \r\n                schedule[index + 1].map((a, b) => {\r\n                    var classStart = moment(periods[b].split('-')[0],'hhmm');\r\n                    var classEnd = moment(periods[b].split('-')[1],'hhmm');\r\n                    var now = moment()\r\n                    return (\r\n                        <SimpleListItem\r\n                            graphic={info[a].icon}\r\n                            text={a}\r\n                            secondaryText={periods[b]}\r\n                            selected={now.isBefore(classEnd) && classStart.subtract(10, 'minutes').isBefore(now)}\r\n                            \r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default ListContainer","import '@rmwc/top-app-bar/styles';\r\nimport {SimpleTopAppBar, TopAppBarFixedAdjust} from '@rmwc/top-app-bar'\r\nimport {Drawer, DrawerHeader, DrawerTitle, DrawerSubtitle, DrawerContent} from '@rmwc/drawer'\r\nimport {List, ListItem} from '@rmwc/list'\r\nimport React from 'react';\r\nimport '@rmwc/drawer/styles';\r\nimport '@rmwc/list/styles';\r\nfunction AppBar({page, setPage, max, index, setIndex}){\r\n    const [open, setOpen] = React.useState(false)\r\n\r\n    function handleBefore(evt){\r\n      setIndex(a => a - 1)\r\n    }\r\n\r\n    function handleNext(evt){\r\n      setIndex(a => a + 1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <SimpleTopAppBar\r\n    title={page}\r\n    navigationIcon\r\n    onNav={() => setOpen(true)}\r\n    actionItems={ [\r\n      { icon: 'navigate_before', onClick: handleBefore, disabled: (index === 0) },\r\n      { icon: 'navigate_next', onClick: handleNext, disabled: (index === max) }\r\n    ]}\r\n\r\n  />\r\n  <TopAppBarFixedAdjust />\r\n  <Drawer modal open={open} onClose={() => setOpen(false)}>\r\n\r\n        <DrawerContent>\r\n          <List wrapFocus={false}>\r\n            <ListItem onClick={() => setPage(\"Schedule\")} selected={page === \"Schedule\"}>Schedule</ListItem>\r\n            <ListItem onClick={() => {setPage(\"Todos\")}} selected={page === \"Todos\"}>Todos</ListItem>\r\n          </List>\r\n        </DrawerContent>\r\n      </Drawer>\r\n        </>\r\n    )\r\n}\r\nexport default AppBar\r\n\r\n","function Nextline(){\r\n    return (<br></br>)\r\n}\r\n\r\nexport default Nextline","import {CollapsibleList, ListItem, ListItemMeta, SimpleListItem} from '@rmwc/list'\r\nimport {TextField} from '@rmwc/textfield'\r\nimport {Icon} from '@rmwc/icon'\r\n\r\n\r\nimport {Typography} from '@rmwc/typography'\r\nimport {Checkbox} from '@rmwc/checkbox'\r\nimport mdDateTimePicker from 'md-date-time-picker'\r\nimport '@rmwc/list/styles';\r\nimport '@rmwc/checkbox/styles';\r\n\r\nimport '@rmwc/textfield/styles';\r\nimport {Fab} from '@rmwc/fab'\r\nimport {useState, createRef, useEffect} from 'react'\r\nimport {Dialog, DialogTitle, DialogContent, DialogButton, DialogActions} from '@rmwc/dialog'\r\nimport '@rmwc/dialog/styles';\r\nimport '@rmwc/fab/styles';\r\nimport '@rmwc/typography/styles';\r\nimport '@rmwc/icon/styles';\r\nimport Nextline from './Nextline'\r\nimport moment from 'moment'\r\n\r\nfunction Todos({setMax, _index, setIndex}){\r\n    var input = createRef()\r\n    var inputName = createRef()\r\n    var dialog = new mdDateTimePicker({\"type\": \"date\", \"past\": moment(), \"future\": moment().add(3, 'years')})\r\n    var time = dialog.time\r\n    const [open, setOpen] = useState(false)\r\n    const weekNow = moment().week()\r\n    \r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n      const storedTasks = JSON.parse(localStorage.getItem('tasks'))\r\n      if(storedTasks) setTasks(storedTasks)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n      localStorage.setItem('tasks', JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n    const filtered = tasks.filter(a =>　weekNow <= moment(a.date).week())\r\n\r\n    console.log(filtered)\r\n\r\n    const sorted = filtered.sort((a, b) => moment(a.date).dayOfYear() - moment(b.date).dayOfYear())\r\n\r\n    var arrangedByWeek = [], currentWeek = 0, index = -1;\r\n\r\n    for(var i = 0; i < sorted.length; i++){\r\n      if(moment(sorted[i].date).week() > currentWeek){\r\n        currentWeek = moment(sorted[i].date).week();\r\n        index ++;\r\n        arrangedByWeek[index] = [];\r\n      }\r\n\r\n      arrangedByWeek[index].push(sorted[i])\r\n      \r\n    }\r\n\r\n    console.log(arrangedByWeek)\r\n    var arrangedByDay = arrangedByWeek.map(a => {\r\n      var arrangedByDay = [], currentDay = 0, index = -1;\r\n\r\n      for(var i = 0; i < a.length; i++){\r\n        if(moment(a[i].date).dayOfYear() > currentDay){\r\n          currentDay = moment(a[i].date).dayOfYear();\r\n          index ++;\r\n          arrangedByDay[index] = [];\r\n        }\r\n\r\n        arrangedByDay[index].push(a[i])\r\n      \r\n      }\r\n\r\n      return arrangedByDay\r\n    })\r\n\r\n    console.log(arrangedByDay)\r\n    setMax(arrangedByDay.length - 1)\r\n\r\n    function handleCzech(date){\r\n\r\n      const newTasks = [...tasks]\r\n      const todo = newTasks.find(a => a.date === date)\r\n      todo.checked = !todo.checked\r\n      setTasks(newTasks)\r\n\r\n      \r\n    }\r\n\r\n    function handleAddTodo(){\r\n      var newTask = \r\n      {\r\n        date: dialog.time.format(),\r\n        checked: false,\r\n        name: inputName.current.querySelector('input').value\r\n      }\r\n\r\n      input.current.querySelector('input').value = inputName.current.querySelector('input').value = ''\r\n      setTasks([...tasks, newTask])\r\n    }\r\n\r\n      \r\n    \r\n\r\n    \r\n    \r\n    return(\r\n        <>\r\n      <div class=\"list\">\r\n        { tasks.length === 0? null: arrangedByDay[_index].map(days => {\r\n            return (\r\n              <CollapsibleList\r\n                nonInteractive\r\n                defaultOpen={true}\r\n                handle={\r\n                  <ListItem>\r\n                    <Typography use=\"subtitle2\">\r\n                      { moment(days[0].date).week() === weekNow ? \r\n                        moment(days[0].date).format('ddd') : \r\n                        `${moment(days[0].date).format('M')}/${moment(days[0].date).format('D')} (${moment(days[0].date).format('ddd')})`\r\n                      }\r\n                      </Typography>\r\n                    <ListItemMeta>\r\n                          <Icon icon=\"chevron_right\" />\r\n                      </ListItemMeta>\r\n                  </ListItem>\r\n                }\r\n              >\r\n                {\r\n                  days.map(task => {\r\n                    return (\r\n                      <ListItem onClick={() => handleCzech(task.date)}>\r\n                        {task.name}\r\n                        <ListItemMeta>\r\n                          <Checkbox checked={task.checked} />\r\n                        </ListItemMeta>\r\n                      </ListItem>\r\n                    )\r\n                  })\r\n                }\r\n              </CollapsibleList>\r\n            )\r\n          })\r\n          \r\n        }\r\n      </div>\r\n  <Dialog\r\n        open={open}\r\n        onClose={evt => {\r\n          setOpen(false);\r\n        }}\r\n        onClosed={evt => console.log(evt.detail.action)}\r\n      >\r\n        <DialogTitle>Add Todo</DialogTitle>\r\n        <DialogContent>\r\n        <TextField label=\"Name\" ref={inputName}/>\r\n        <Nextline />\r\n        <TextField trailingIcon={{\r\n      icon: 'event',\r\n      onClick: (e) => {\r\n        e.preventDefault()\r\n        \r\n                document.querySelector('.mddtp-picker__subtitle').classList.remove('mddtp-picker__color--active');\r\n                document.querySelector('.mddtp-picker__title').classList.add('mddtp-picker__color--active')\r\n                \r\n\r\n          \r\n          dialog.toggle(); \r\n          console.log(dialog.time.toString()); \r\n          document.querySelector('#mddtp-date__ok').addEventListener('click', () => {\r\n            input.current.querySelector('input').focus()\r\n              input.current.querySelector('input').value = dialog.time.format(\"ddd[,] MMM D\")\r\n              input.current.querySelector('input').blur() \r\n            })\r\n        }\r\n    }} ref={input} label=\"Date\" />\r\n    \r\n    \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <DialogButton action=\"close\">Cancel</DialogButton>\r\n          <DialogButton action=\"accept\" isDefaultAction onClick={() => handleAddTodo()}>\r\n            Add\r\n          </DialogButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Fab raised icon=\"add\" onClick={() => setOpen(true)} />\r\n      \r\n    </>\r\n  )\r\n}\r\nexport default Todos","import logo from './logo.svg';\nimport ListContainer from './ListContainer.js'\nimport 'material-icons/iconfont/material-icons.css';\nimport AppBar from './AppBar.js'\nimport Todos from './Todos.js'\nimport React, { useEffect } from 'react'\n\n\nimport './mdDateTimePicker.css'\n\nconst schedule = {\n  1: [\"Chemistry\", \"Chemistry\", \"Technology\", \"Mathematics\", \"Electives\", \"Electives\", \"Alternatives\"],\n  2: [\"Mathematics\", \"Mathematics\", \"Music\", \"English\", \"Chinese\", \"Geography\", \"Sports\"],\n  3: [\"Physics\", \"Physics\", \"Geology\", \"English\", \"Alternatives\", \"Club\", \"Alternatives\"],\n  4: [\"Geology\", \"Chinese\", \"Deutsch\", \"Geography\", \"Mathematics\", \"English\", \"Art\"],\n  5: [\"Geography\", \"English\", \"Sports\", \"Geology\", \"Chinese\", \"Chinese\", \"Guidance\"],\n}\n\nconst info = {\n  \"Chemistry\": {\n    \"icon\": \"science\",\n  },\n  \"Geology\": {\n    \"icon\": \"travel_explore\",\n  },\n  \"Technology\": {\n    \"icon\": \"computer\",\n  },\n  \"Mathematics\": {\n    \"icon\": \"calculate\",\n  },\n  \"Electives\": {\n    \"icon\": \"functions\",\n  },\n  \"Alternatives\": {\n    \"icon\": \"nature_people\",\n  },\n  \"Music\": {\n    \"icon\": \"music_note\",\n  },\n  \"English\": {\n    \"icon\": \"language\",\n  },\n  \"Chinese\": {\n    \"icon\": \"book\",\n  },\n  \"Geography\": {\n    \"icon\": \"terrain\",\n  },\n  \"Sports\": {\n    \"icon\": \"sports_tennis\",\n  },\n  \"Physics\": {\n    \"icon\": \"analytics\",\n  },\n  \"Club\": {\n    \"icon\": \"group\",\n  },\n  \"Deutsch\": {\n    \"icon\": \"language\",\n  },\n  \"Art\": {\n    \"icon\": \"palette\",\n  },\n  \"Guidance\": {\n    \"icon\": \"directions\",\n  },\n}\n\nconst periods = [\"8:10 - 9:00\", \"9:10 - 10:00\", \"10:10 - 11:00\", \"11:10 - 12:00\", '13:10 - 14:00', '14:10 - 15:00', '15:20 - 16:10']\nfunction App() {\n  const [page, setPage] = React.useState('Schedule')\n  const [index, setIndex] = React.useState(0)\n  const [max, setMax] = React.useState(0)\n  const setPage2 = (a) => {setPage(a); setIndex(0)}\n  \n  \n  \n  return (\n    <>\n    <AppBar page={page} setPage={setPage2} setIndex={setIndex} index={index} max={max} />\n    {\n      page === \"Schedule\" ? (\n        <ListContainer info={info} schedule={schedule} day={new Date().getDay()} periods={periods} setMax={setMax} setIndex={setIndex} index={index} />\n      ) : \n      (\n        <Todos setMax={setMax} _index={index} setIndex={setIndex} />\n      )\n    }\n    \n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}