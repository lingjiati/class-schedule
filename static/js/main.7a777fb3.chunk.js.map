{"version":3,"sources":["logo.svg","ListContainer.js","AppBar.js","Nextline.js","Todos.js","App.js","reportWebVitals.js","index.js"],"names":["ListContainer","schedule","info","periods","day","twoLine","map","a","b","graphic","icon","text","secondaryText","AppBar","page","setPage","toggle","React","useState","open","setOpen","title","navigationIcon","onNav","modal","onClose","onClick","Nextline","Todos","input","createRef","dialog","mdDateTimePicker","time","handle","metaIcon","evt","console","log","detail","action","onClosed","label","trailingIcon","current","querySelector","value","document","classList","remove","add","toString","addEventListener","format","ref","isDefaultAction","raised","App","Date","getDay","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7a777fb3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {List, SimpleListItem} from '@rmwc/list'\r\nimport '@rmwc/list/styles';\r\n\r\nfunction ListContainer( {schedule, info, periods, day} ){\r\n    if (day === 0 || day === 6) return null;\r\n    return (\r\n        <List twoLine>\r\n            {\r\n                \r\n                schedule[day].map((a, b) => {\r\n                    return (\r\n                        <SimpleListItem\r\n                            graphic={info[a].icon}\r\n                            text={a}\r\n                            secondaryText={periods[b]}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default ListContainer","import '@rmwc/top-app-bar/styles';\r\nimport {SimpleTopAppBar, TopAppBarFixedAdjust} from '@rmwc/top-app-bar'\r\nimport {Drawer, DrawerHeader, DrawerTitle, DrawerSubtitle, DrawerContent} from '@rmwc/drawer'\r\nimport {List, ListItem} from '@rmwc/list'\r\nimport React from 'react';\r\nimport '@rmwc/drawer/styles';\r\nimport '@rmwc/list/styles';\r\nfunction AppBar({page, setPage, toggle}){\r\n    const [open, setOpen] = React.useState(false)\r\n    return (\r\n        <>\r\n        <SimpleTopAppBar\r\n    title={page}\r\n    navigationIcon\r\n    onNav={() => setOpen(true)}\r\n\r\n  />\r\n  <TopAppBarFixedAdjust />\r\n  <Drawer modal open={open} onClose={() => setOpen(false)}>\r\n\r\n        <DrawerContent>\r\n          <List>\r\n            <ListItem onClick={() => setPage(\"Schedule\")}>Schedule</ListItem>\r\n            <ListItem onClick={() => {setPage(\"Todos\")}} >Todos</ListItem>\r\n          </List>\r\n        </DrawerContent>\r\n      </Drawer>\r\n        </>\r\n    )\r\n}\r\nexport default AppBar\r\n\r\n","function Nextline(){\r\n    return (<br></br>)\r\n}\r\n\r\nexport default Nextline","import {CollapsibleList, SimpleListItem} from '@rmwc/list'\r\nimport {TextField} from '@rmwc/textfield'\r\nimport mdDateTimePicker from 'md-date-time-picker'\r\nimport '@rmwc/list/styles';\r\nimport '@rmwc/textfield/styles';\r\nimport {Fab} from '@rmwc/fab'\r\nimport {useState, createRef} from 'react'\r\nimport {Dialog, DialogTitle, DialogContent, DialogButton, DialogActions} from '@rmwc/dialog'\r\nimport '@rmwc/dialog/styles';\r\nimport '@rmwc/fab/styles';\r\nimport Nextline from './Nextline'\r\n\r\nfunction Todos({toggle}){\r\n    var input = createRef()\r\n        var dialog = new mdDateTimePicker({\"type\": \"date\"})\r\n        var time = dialog.time\r\n        const [open, setOpen] = useState(false)\r\n    \r\n    \r\n    return(\r\n        <>\r\n    <CollapsibleList\r\n    handle={\r\n      <SimpleListItem\r\n        text=\"Pizza\"\r\n        metaIcon=\"chevron_right\"\r\n      />\r\n    }\r\n  >\r\n    <SimpleListItem text=\"Cheese\" />\r\n    <SimpleListItem text=\"Pepperoni\" />\r\n    <SimpleListItem text=\"Supreme\" />\r\n  </CollapsibleList>\r\n  <Dialog\r\n        open={open}\r\n        onClose={evt => {\r\n          console.log(evt.detail.action);\r\n          setOpen(false);\r\n        }}\r\n        onClosed={evt => console.log(evt.detail.action)}\r\n      >\r\n        <DialogTitle>Add Todo</DialogTitle>\r\n        <DialogContent>\r\n        <TextField label=\"Name\" />\r\n        <Nextline />\r\n        <TextField trailingIcon={{\r\n      icon: 'event',\r\n      onClick: () => {\r\n        input.current.querySelector('input').value = ' '\r\n                document.querySelector('.mddtp-picker__subtitle').classList.remove('mddtp-picker__color--active');\r\n                document.querySelector('.mddtp-picker__title').classList.add('mddtp-picker__color--active')\r\n                \r\n\r\n          \r\n          dialog.toggle(); \r\n          console.log(dialog.time.toString()); \r\n          document.querySelector('#mddtp-date__ok').addEventListener('click', () => {\r\n            \r\n              input.current.querySelector('input').value = dialog.time.format(\"ddd[,] MMM D\")\r\n            })\r\n        }\r\n    }} ref={input} label=\"Date\" />\r\n    \r\n    \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <DialogButton action=\"close\">Cancel</DialogButton>\r\n          <DialogButton action=\"accept\" isDefaultAction>\r\n            Add\r\n          </DialogButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Fab raised icon=\"add\" />\r\n  \r\n    </>\r\n  )\r\n}\r\nexport default Todos","import logo from './logo.svg';\nimport ListContainer from './ListContainer.js'\nimport 'material-icons/iconfont/material-icons.css';\nimport AppBar from './AppBar.js'\nimport Todos from './Todos.js'\nimport React, { useEffect } from 'react'\n\nimport moment from 'moment'\nimport './mdDateTimePicker.css'\n\nconst schedule = {\n  1: [\"Chemistry\", \"Chemistry\", \"Technology\", \"Mathematics\", \"Electives\", \"Electives\", \"Alternatives\"],\n  2: [\"Mathematics\", \"Mathematics\", \"Music\", \"English\", \"Chinese\", \"Geography\", \"Sports\"],\n  3: [\"Physics\", \"Physics\", \"Geology\", \"English\", \"Alternatives\", \"Club\", \"Alternatives\"],\n  4: [\"Geology\", \"Chinese\", \"Deutsch\", \"Geography\", \"Mathematics\", \"English\", \"Art\"],\n  5: [\"Geography\", \"English\", \"Sports\", \"Geology\", \"Chinese\", \"Chinese\", \"Guidance\"],\n}\n\nconst info = {\n  \"Chemistry\": {\n    \"icon\": \"science\",\n  },\n  \"Geology\": {\n    \"icon\": \"travel_explore\",\n  },\n  \"Technology\": {\n    \"icon\": \"computer\",\n  },\n  \"Mathematics\": {\n    \"icon\": \"calculate\",\n  },\n  \"Electives\": {\n    \"icon\": \"functions\",\n  },\n  \"Alternatives\": {\n    \"icon\": \"nature_people\",\n  },\n  \"Music\": {\n    \"icon\": \"music_note\",\n  },\n  \"English\": {\n    \"icon\": \"language\",\n  },\n  \"Chinese\": {\n    \"icon\": \"book\",\n  },\n  \"Geography\": {\n    \"icon\": \"terrain\",\n  },\n  \"Sports\": {\n    \"icon\": \"sports_tennis\",\n  },\n  \"Physics\": {\n    \"icon\": \"analytics\",\n  },\n  \"Club\": {\n    \"icon\": \"group\",\n  },\n  \"Deustch\": {\n    \"icon\": \"language\",\n  },\n  \"Art\": {\n    \"icon\": \"palette\",\n  },\n  \"Guidance\": {\n    \"icon\": \"directions\",\n  },\n}\n\nconst periods = [\"8:10 - 9:00\", \"9:10 - 10:00\", \"10:10 - 11:00\", \"11:10 - 12:00\", '13:10 - 14:00', '14:10 - 15:00', '15:20 - 16:10']\nfunction App() {\n  const [page, setPage] = React.useState('Schedule')\n  \n\n  \n  \n  return (\n    <>\n    <AppBar page={page} setPage={setPage}/>\n    {\n      page === \"Schedule\" ? (\n        <ListContainer info={info} schedule={schedule} day={new Date().getDay()} periods={periods}/>\n      ) : \n      (\n        <Todos />\n      )\n    }\n    \n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './App.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}